version: "3.8"

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
    web:
        image: shekeriev/hw3-web
        deploy:
            replicas: 3
        ports:
            - 8080:80
        networks:
            - appnet
        depends_on:
            - db

    db:
        image: shekeriev/hw3-db
        networks:
            - appnet
        environment:
            MYSQL_ROOT_PASSWORD: "12345"

    prometheus:
        image: prom/prometheus:v2.36.2
        volumes:
          - prometheus:/etc/prometheus/
          - prometheus_data:/prometheus
        command:
          - '--config.file=/etc/prometheus/prometheus.yml'
        ports:
          - 9090:9090
        depends_on:
          - cadvisor
        networks:
          - monitor-net
        deploy:
          placement:
            constraints:
              - node.role==manager
          restart_policy:
            condition: on-failure
    node-exporter:
        image: quay.io/prometheus/node-exporter:latest
        volumes:
          - /proc:/host/proc:ro
          - /sys:/host/sys:ro
          - /:/rootfs:ro
        command: 
          - '--path.procfs=/host/proc' 
          - '--path.sysfs=/host/sys'
          - --collector.filesystem.ignored-mount-points
          - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
        ports:
          - 9100:9100
        networks:
          - monitor-net
        deploy:
          mode: global
          restart_policy:
              condition: on-failure

    alertmanager:
        image: prom/alertmanager
        ports:
          - 9093:9093
        volumes:
          - alertmanager:/etc/alertmanager/
        networks:
          - appnet
        command:
          - '--config.file=/etc/alertmanager/config.yml'
          - '--storage.path=/alertmanager'
        deploy:
          placement:
            constraints:
              - node.role==manager
          restart_policy:
            condition: on-failure    

    cadvisor:
        image: gcr.io/cadvisor/cadvisor
        volumes:
          - /:/rootfs:ro
          - /var/run:/var/run:rw
          - /sys:/sys:ro
          - /var/lib/docker/:/var/lib/docker:ro
        ports:
          - 8081:8081
        networks:
          - appnet
        deploy:
          mode: global
          restart_policy:
            condition: on-failure
    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        ports:
            - "3000:3000"
        volumes:
              - grafana-data:/var/lib/grafana
        restart: unless-stopped
networks:
    appnet: